name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on: push
jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Base Package Version Update (non-release build test)
      if: startsWith(github.ref, 'branch')
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "GITHUB.RELEASE.TAG"
        replace: "0.1.1"
        regex: false
        include: "**pyproject.toml"
    - name: Update Package Version Number
      if: startsWith(github.ref_type, 'tag')
      uses: jacobtomlinson/gha-find-replace@v3
      env:
          GITHUB_RELEASE_TAG: ${{ github.ref_name }}
      with:
        find: "GITHUB.RELEASE.TAG"
        replace: "$GITHUB_RELEASE_TAG"
        regex: false
        include: "**pyproject.toml"
        run: 'echo "::debug::Set the Octocat variable"'
    - name: Build Package (binary wheel and source tarball)
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/<package-name>  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
